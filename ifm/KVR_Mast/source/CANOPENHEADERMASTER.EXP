
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/CANopen' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
PROGRAM CANopenHeaderMaster
VAR_INPUT
	Channel: BYTE;
	DownloadID: BYTE;
	Baud: WORD;
END_VAR
VAR
	(*CAN settings*)
	SettingsCAN: CAN_SETTING_ST;

	(*Set CANopen state*)
	SetCanOpenState: CANOPEN_SETSTATE;
	SetState:BOOL:=TRUE;

	(*Handling CANopen status*)
	HandlingCANopen: CANopen_HANDLING_ST;
	Baudrate: DWORD;
	MasterState: BYTE;
	GuardError: BOOL;
	ErrorNodeList: ARRAY[0..MAXGUARDERR] OF BYTE;
	CanState: BYTE;
	Nodestate: BYTE;
	LastNodeState: BYTE;

	(*Emergency handling*)
	CanEmcy: CAN_EMCY;
	RestEmcyList: BOOL;
	EMCY_MSG_Count: DWORD; (* No of EMCY messages  Leaving errors are count too *)
	EmcyStruct: ARRAY[0..10] OF tT_EMCY;

	(*Handling CAN status*)
	StatusCan: CAN_Status_and_Errors;
	ResetCanFlags: BOOL;
	BusLoad: BYTE;
	BusOff: BOOL;
	RxOverflow: BOOL;
	RxWarning: BOOL;
	TxOverflow: BOOL;
	TxWarning: BOOL;

	GetstateSlave1: CANopen_GetStateSlave;

END_VAR
(* @END_DECLARATION := '0' *)
_FBD_BODY
_NETWORKS : 7
_NETWORK

_COMMENT
'Basic functions for the CAN / CANopen functionality'
_END_COMMENT
_FUNCTIONBLOCK
SettingsCAN
_BOX_EXPR : 3
_OPERAND
_EXPRESSION
_POSITIV
Channel
_OPERAND
_EXPRESSION
_POSITIV
Baud
_OPERAND
_EXPRESSION
_POSITIV
DownloadID
_EXPRESSION
_POSITIV
CAN_SETTING_ST
_OUTPUTS : 0
_NETWORK

_COMMENT
'Set CANopen status'
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_FUNCTIONBLOCK
SetCanOpenState
_BOX_EXPR : 6
_OPERAND
_EXPRESSION
_POSITIV
SetState
_OPERAND
_EXPRESSION
_POSITIV
Channel
_OPERAND
_EXPRESSION
_POSITIV
_EMPTY
_OPERAND
_EXPRESSION
_POSITIV
FALSE
_OPERAND
_EXPRESSION
_POSITIV
T#50ms
_OPERAND
_EXPRESSION
_POSITIV
FALSE
_EXPRESSION
_POSITIV
CANOPEN_SETSTATE
_OUTPUTS : 0
_OPERAND
_EXPRESSION
_POSITIV
1
_EXPRESSION
_POSITIV
EQ
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_NEGATIV
_SET
SetState
_NETWORK

_COMMENT
'CANopen Master and heartbeat handling'
_END_COMMENT
_ASSIGN
_FUNCTIONBLOCK
HandlingCANopen
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
Channel
_OPERAND
_EXPRESSION
_POSITIV
0
_EXPRESSION
_POSITIV
CANopen_HANDLING_ST
_OUTPUTS : 6
_OUTPUT
_POSITIV
_NO_SET
MasterState
_OUTPUT
_POSITIV
_NO_SET
GuardError
_OUTPUT
_POSITIV
_NO_SET
ErrorNodeList
_OUTPUT
_POSITIV
_NO_SET
CanState
_OUTPUT
_POSITIV
_NO_SET
Nodestate
_OUTPUT
_POSITIV
_NO_SET
LastNodeState
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
Baudrate
_NETWORK

_COMMENT
'CANopen Emergency Handling for 11 emergency messages'
_END_COMMENT
_ASSIGN
_FUNCTIONBLOCK
CanEmcy
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
RestEmcyList
_OPERAND
_EXPRESSION
_POSITIV
Channel
_EXPRESSION
_POSITIV
CAN_EMCY
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
EmcyStruct
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
EMCY_MSG_Count
_NETWORK

_COMMENT
'Get the CAN Status and CAN Errors'
_END_COMMENT
_ASSIGN
_FUNCTIONBLOCK
StatusCan
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
Channel
_OPERAND
_EXPRESSION
_POSITIV
ResetCanFlags
_EXPRESSION
_POSITIV
CAN_Status_and_Errors
_OUTPUTS : 5
_OUTPUT
_POSITIV
_NO_SET
BusLoad
_OUTPUT
_POSITIV
_NO_SET
RxOverflow
_OUTPUT
_POSITIV
_NO_SET
RxWarning
_OUTPUT
_POSITIV
_NO_SET
TxOverflow
_OUTPUT
_POSITIV
_NO_SET
TxWarning
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_POSITIV
_NO_SET
BusOff
_NETWORK

_COMMENT
''
_END_COMMENT
_FUNCTIONBLOCK
GetstateSlave1
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
Channel
_OPERAND
_EXPRESSION
_POSITIV
FU1_NODE_ID
_EXPRESSION
_POSITIV
CANopen_GetStateSlave
_OUTPUTS : 2
_OUTPUT
_POSITIV
_NO_SET
_EMPTY
_OUTPUT
_POSITIV
_NO_SET
_EMPTY
_NETWORK

_COMMENT
''
_END_COMMENT
_ASSIGN
_OPERATOR
_BOX_EXPR : 2
_OPERAND
_EXPRESSION
_POSITIV
GetstateSlave1.NodeState
_OPERAND
_EXPRESSION
_POSITIV
5
_EXPRESSION
_POSITIV
NE
_EXPRESSION
_POSITIV
_OUTPUTS : 1
_OUTPUT
_NEGATIV
_SET
canNodeFU1Present

END_PROGRAM
